#BlueJ class context
comment0.target=Town
comment0.text=\r\n\ Pretends\ to\ simulate\ a\ town\ who\ has\ decided\ to\ improve\ road\ sign\ placement,\ especially\ for\ dead\ ends.\r\n\ \r\n\ @author\ Angie\ Medina\ -\ Jose\ Perez\r\n\ @version\ 11/10/2020\r\n
comment1.params=height\ width\ slow
comment1.target=Town(int,\ int,\ boolean)
comment1.text=\ \r\n\ Constructor\ of\ the\ town\ given\ its\ length\ and\ width\r\n\ 1st\ mini\ cicle\:\ Create\r\n\ @param\ height\ of\ the\ town\ in\ pixels\r\n\ @param\ width\ of\ the\ town\ in\ pixels\r\n\ @param\ slow\ speed\ of\ simulation\r\n
comment10.params=streetSigns\ typeSigns
comment10.target=void\ randomSigns(java.util.ArrayList,\ java.lang.String[])
comment10.text=\r\n\ Creates\ signs\ randomly\r\n\ @param\ streetSigns\ the\ identifier\ of\ the\ streets\ that\ can\ have\ signs\r\n\ @param\ typeSigns\ the\ types\ of\ the\ signs\r\n\ @throws\ TownException\ WRONG_SIGN_TYPE,\ if\ the\ sign's\ type\ is\ not\ valid\r\n
comment11.params=color\ x\ y\ type
comment11.target=void\ checkLocation(java.lang.String,\ int,\ int,\ java.lang.String)
comment11.text=\r\n\ Checks\ if\ the\ wanted\ location\ can\ be\ added\ to\ the\ town,\ if\ thats\ the\ case\ creates\ the\ location\ desired.\r\n\ 2nd\ mini\ cicle\:\ add\ /\ delete\ location\r\n\ @param\ color\ is\ written\ in\ RGBa\ format\r\n\ @param\ x\ is\ the\ position\ on\ x\ axis\r\n\ @param\ y\ is\ the\ position\ on\ y\ axis\r\n\ @param\ type\ valid\ types\:\ normal,\ reverse,\ isolate\r\n\ @throws\ TownException\ COLOR_UNAVAILABLE,\ \ \ if\ the\ color\ is\ not\ in\ the\ color\ list\ provided\ by\ the\ town;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ EXISTING_LOCATION,\ \ \ if\ the\ color\ is\ already\ used\ by\ other\ location;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ WRONG_LOCATION_TYPE,\ if\ the\ location's\ type\ is\ not\ valid;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ LOCATION_COLLISION,\ \ if\ the\ location's\ positions\ are\ already\ occupied\r\n
comment12.params=color\ x\ y\ type
comment12.target=Location\ createLocation(java.lang.String,\ int,\ int,\ java.lang.String)
comment12.text=\r\n\ Creates\ a\ new\ location\ with\ the\ given\ params\r\n\ @param\ color\ is\ written\ in\ RGBa\ format\r\n\ @param\ x\ is\ the\ position\ on\ x\ axis\r\n\ @param\ y\ is\ the\ position\ on\ y\ axis\r\n\ @param\ type\ valid\ types\:\ normal,\ reverse,\ isolate\r\n
comment13.params=color\ x\ y
comment13.target=void\ addLocation(java.lang.String,\ int,\ int)
comment13.text=\r\n\ \r\n\ Addicionate\ one\ location\ given\ certain\ information\r\n\ 2nd\ mini\ cicle\:\ add\ /\ delete\ location\r\n\ @param\ color\ is\ written\ in\ RGBa\ format\r\n\ @param\ x\ is\ the\ position\ on\ x\ axis\r\n\ @param\ y\ is\ the\ position\ on\ y\ axis\r\n
comment14.params=type\ color\ x\ y
comment14.target=void\ addLocation(java.lang.String,\ java.lang.String,\ int,\ int)
comment14.text=\r\n\ Addicionate\ one\ location\ given\ certain\ information\r\n\ 2nd\ mini\ cicle\:\ add\ /\ delete\ location\r\n\ @param\ color\ is\ written\ in\ RGBa\ format\r\n\ @param\ x\ is\ the\ position\ on\ x\ axis\r\n\ @param\ y\ is\ the\ position\ on\ y\ axis\r\n\ @param\ type\ Type\ of\ the\ new\ location\r\n
comment15.params=color
comment15.target=void\ delLocation(java.lang.String)
comment15.text=\r\n\ Deletes\ one\ location\ given\ certain\ its\ color\r\n\ 2nd\ mini\ cicle\:\ add\ /\ delete\ location\r\n\ @param\ color\ is\ written\ in\ RGBa\ format\r\n
comment16.params=identifier\ locationA\ locationB\ type
comment16.target=void\ checkStreet(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment16.text=\r\n\ Checks\ if\ the\ wanted\ street\ can\ be\ added\ to\ the\ town,\ if\ thats\ the\ case\ creates\ the\ street\ desired.\r\n\ 3rd\ mini\ cicle\:\ add\ /\ delete\ street\r\n\ @param\ locationA\r\n\ @param\ type\ valid\ types\:\ normal,\ silent,\ prudent\r\n\ @throws\ TownException\ LOCATION_NOT_FOUND,\ if\ there\ isn't\ a\ location\ with\ such\ color;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ EXISTING_STREET,\ \ \ \ if\ the\ street\ is\ already\ added\ in\ the\ town;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ WRONG_STREET_TYPE,\ \ if\ the\ street's\ type\ is\ not\ valid;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ LOCATION_NO_STREET,\ if\ one\ of\ the\ locations\ can't\ have\ streets\r\n
comment17.params=type\ lA\ lB
comment17.target=Street\ createStreet(java.lang.String,\ Location,\ Location)
comment17.text=\r\n\ @param\ locationA\ first\ location's\ identifier\r\n\ @param\ locationB\ second\ location's\ identifier\r\n\ @param\ type\ valid\ types\:\ normal,\ silent,\ prudent\r\n
comment18.params=locationA\ locationB
comment18.target=void\ addStreet(java.lang.String,\ java.lang.String)
comment18.text=\r\n\ Addicionate\ one\ street\ given\ certain\ infomation\r\n\ 3rd\ mini\ cicle\:\ add\ /\ delete\ street\r\n\ @param\ locationA\ the\ color\ of\ one\ linked\ location\r\n\ @param\ locationB\ the\ color\ of\ one\ linked\ location\r\n\ @param\ type\ Type\ of\ the\ new\ location\r\n
comment19.params=type\ locationA\ locationB
comment19.target=void\ addStreet(java.lang.String,\ java.lang.String,\ java.lang.String)
comment19.text=\r\n\ Addicionate\ one\ street\ given\ certain\ infomation\r\n\ 3rd\ mini\ cicle\:\ add\ /\ delete\ street\r\n\ @param\ locationA\ the\ color\ of\ one\ linked\ location\r\n\ @param\ locationB\ the\ color\ of\ one\ linked\ location\r\n\ @param\ type\ Type\ of\ the\ new\ street\r\n
comment2.params=height\ width
comment2.target=Town(int,\ int)
comment2.text=\r\n\ Constructor\ of\ the\ town\ given\ its\ length\ and\ width\r\n\ 1st\ mini\ cicle\:\ Create\r\n\ @param\ height\ of\ the\ town\ in\ pixels\r\n\ @param\ width\ of\ the\ town\ in\ pixels\r\n
comment20.params=locationA\ locationB
comment20.target=void\ delStreet(java.lang.String,\ java.lang.String)
comment20.text=\r\n\ Deletes\ a\ street\ with\ given\ information\r\n\ 3rd\ mini\ cicle\:\ add\ /\ delete\ street\r\n\ @param\ LocationA\ color\ of\ the\ linked\ location\r\n\ @param\ LocationB\ color\ of\ the\ linked\ location\r\n
comment21.params=
comment21.target=void\ delStreet()
comment21.text=\r\n\ Deletes\ a\ excess\ street\r\n\ 3rd\ mini\ cicle\:\ add\ /\ delete\ street\r\n
comment22.params=streetIdentifier\ signIdentifier\ locationA\ locationB\ type
comment22.target=void\ checkSign(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment22.text=\r\n\ Checks\ if\ the\ wanted\ street\ can\ be\ added\ to\ the\ town,\ if\ thats\ the\ case\ creates\ the\ street\ desired.\r\n\ 3rd\ mini\ cicle\:\ add\ /\ delete\ street\r\n\ @param\ locationA\r\n\ @param\ type\ valid\ types\:\ normal,\ fixed,\ bouncy\r\n\ @throws\ TownException\ LOCATION_NOT_FOUND,\ if\ there\ isn't\ a\ location\ with\ such\ color;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ STREET_NOT_FOUND,\ \ \ if\ there\ isn't\ a\ street\ where\ to\ put\ it;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ EXISTING_SIGN,\ \ \ \ \ \ if\ the\ sign\ is\ already\ added\ in\ the\ town;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ WRONG_SIGN_TYPE,\ \ \ \ if\ the\ signs's\ type\ is\ not\ valid;\r\n
comment23.params=locationA\ locationB
comment23.target=void\ addSign(java.lang.String,\ java.lang.String)
comment23.text=\r\n\ Addicionate\ one\ sign\ given\ certain\ infomation\r\n\ 4th\ mini\ cicle\:\ add\ /\ delete\ sign\r\n\ @param\ locationA\ the\ color\ of\ one\ linked\ location\r\n\ @param\ locationB\ the\ color\ of\ one\ linked\ location\r\n
comment24.params=type\ locationA\ locationB
comment24.target=void\ addSign(java.lang.String,\ java.lang.String,\ java.lang.String)
comment24.text=\r\n\ Addicionate\ one\ sign\ given\ certain\ infomation\r\n\ 4th\ mini\ cicle\:\ add\ /\ delete\ sign\r\n\ @param\ locationA\ the\ color\ of\ one\ linked\ location\r\n\ @param\ locationB\ the\ color\ of\ one\ linked\ location\r\n\ @param\ type\ Type\ of\ the\ new\ sign\r\n
comment25.params=locationA\ locationB
comment25.target=void\ delSign(java.lang.String,\ java.lang.String)
comment25.text=\r\n\ Deletes\ a\ sign\ with\ given\ information\r\n\ 4th\ mini\ cicle\:\ add\ /\ delete\ sign\r\n\ @param\ LocationA\ color\ of\ the\ linked\ location\r\n\ @param\ LocationB\ color\ of\ the\ li\ nked\ location\r\n
comment26.params=
comment26.target=void\ delSign()
comment26.text=\r\n\ Deletes\ an\ excess\ sign\r\n\ 4th\ mini\ cicle\:\ add\ /\ delete\ sign\r\n
comment27.params=action\ ur
comment27.target=void\ undoRedoActions(java.lang.String[],\ java.lang.String)
comment27.text=\r\n\ Undo\ the\ visible\ actions\ made\ by\ the\ town\r\n\ 5th\ mini-cicle\ \:\ undo\ /\ redo\r\n\ @param\ action\ the\ list\ of\ visible\ actions\ made\ by\ the\ town\r\n\ @param\ ur\ a\ string\ idicating\ if\ it\ desire\ to\ redo\ or\ undo\r\n
comment28.params=
comment28.target=void\ undo()
comment28.text=\r\n\ Undo\ the\ last\ visual\ action\ performed\ in\ the\ simulator\r\n\ 5th\ mini-cicle\ \:\ undo\ /\ redo\r\n
comment29.params=
comment29.target=void\ redo()
comment29.text=\r\n\ Redo\ the\ last\ visual\ action\ performed\ in\ the\ simulator\r\n\ 5th\ mini-cicle\ \:\ undo\ /\ redo\r\n
comment3.params=height\ width\ numberLocations\ numberStreets\ numberDeadEnds\ slow
comment3.target=Town(int,\ int,\ int,\ int,\ int,\ boolean)
comment3.text=\r\n\ Constructor\ of\ a\ random\ town\ given\ some\ features\r\n\ 1st\ mini\ cicle\:\ Create\r\n\ @param\ height\ of\ the\ town\ in\ pixels\r\n\ @param\ width\ of\ the\ town\ in\ pixels\r\n\ @param\ number\ of\ locations\ (must\ create\ those\ randomly)\r\n\ @param\ number\ of\ street\ (must\ create\ thouse\ randomly)\r\n\ @param\ number\ of\ dead-ends\ (must\ create\ thouse\ randomly)\r\n\ @throws\ TownException\ INVALID_NUMBER_STREETS,\ \ if\ is\ imposible\ to\ create\ that\ number\ of\ streets\ with\ the\ given\ locations\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ INVALID_NUMBER_DEADENDS,\ if\ is\ imposible\ to\ create\ that\ number\ of\ signs\ with\ the\ given\ streets\ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ WRONG_LOCATION_TYPE,\ \ \ \ \ if\ the\ location's\ type\ is\ not\ valid\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ WRONG_STREET_TYPE,\ \ \ \ \ \ \ if\ the\ street's\ type\ is\ not\ valid\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ WRONG_SIGN_TYPE,\ \ \ \ \ \ \ \ \ if\ the\ sign's\ type\ is\ not\ valid\r\n
comment30.params=
comment30.target=java.lang.String[][]\ roadMap()
comment30.text=\r\n\ Gives\ the\ information\ of\ the\ streets\r\n\ 6th\ mini-cicle\ \:\ consult\r\n\ @return\ the\ colors\ of\ the\ locations\ connected\ by\ a\ street\r\n
comment31.params=
comment31.target=boolean\ ok()
comment31.text=\r\n\ Gives\ the\ information\ of\ the\ last\ action\ excuted\ by\ the\ simulator\r\n\ 6th\ mini-cicle\ \:\ consult\r\n\ @return\ true\ if\ the\ last\ action\ was\ succesfully\ excuted\r\n\ false\ otherwise\r\n
comment32.params=
comment32.target=java.lang.String[][]\ allLocations()
comment32.text=\r\n\ Gives\ the\ information\ of\ all\ the\ locations\ ordered\ alphabetically\ and\ in\ lower\ case\r\n\ 6th\ mini-cicle\ \:\ consult\r\n\ @return\ the\ colors\ and\ position\ of\ the\ locations\r\n
comment33.params=
comment33.target=java.lang.String[][]\ allStreets()
comment33.text=\r\n\ Gives\ the\ information\ of\ all\ the\ streets\ ordered\ alphabetically\ and\ in\ lower\ case\r\n\ 6th\ mini-cicle\ \:\ consult\r\n\ @return\ the\ colors\ of\ the\ locations\ connected\ by\ a\ street\r\n
comment34.params=
comment34.target=java.lang.String[][]\ allSigns()
comment34.text=\r\n\ Gives\ the\ information\ of\ all\ the\ signs\r\n\ 6th\ mini-cicle\ \:\ consult\r\n\ @return\ the\ colors\ of\ the\ locations\ connected\ by\ a\ street\ with\ a\ sign\r\n
comment35.params=
comment35.target=java.lang.String[][]\ unnecessaryStreets()
comment35.text=\r\n\ Returns\ a\ list\ with\ the\ streets\ that\ are\ not\ necessary\ to\ move\ around\ the\ town\ \r\n\ 6th\ mini-cicle\ \:\ consult\r\n\ @return\ A\ list\ of\ tuples\ with\ the\ locations\ that\ delimit\ the\ unnecessary\ streets\r\n
comment36.params=
comment36.target=java.lang.String[][]\ wrongSignals()
comment36.text=\r\n\ Gives\ the\ information\ of\ the\ wrong\ signals\ in\ the\ city\ ordered\ alphabetically\ and\ in\ lower\ case\r\n\ 6th\ mini-cicle\:\ Consult\r\n\ @return\ the\ colors\ of\ the\ locations\ connected\ to\ the\ signal's\ street\r\n
comment37.params=
comment37.target=void\ makeVisible()
comment37.text=\r\n\ Make\ visible\ the\ objects\ on\ the\ simulator\r\n\ 7th\ mini-cicle\ \:\ make\ visible\ /\ make\ invisible\r\n
comment38.params=
comment38.target=void\ makeInvisible()
comment38.text=\r\n\ Make\ invisible\ the\ objects\ on\ the\ simulator\r\n\ 7th\ mini-cicle\ \:\ make\ visible\ /\ make\ invisible\r\n
comment39.params=
comment39.target=void\ finish()
comment39.text=\r\n\ Exit\ the\ simutator\r\n\ 8th\ mini-cicle\ \:\ finish\r\n
comment4.params=input\ slow
comment4.target=Town(java.lang.String[],\ boolean)
comment4.text=\r\n\ Constructor\ of\ a\ town\ given\ some\ specification\r\n\ 1st\ mini\ cicle\:\ Create\r\n\ @param\ the\ specification\ corresponds\ to\ the\ input\ of\ the\ icp\ problem\r\n\ @param\ boolean\ that\ specifics\ the\ speed\ of\ the\ simulation\r\n
comment40.params=
comment40.target=boolean\ isVisible()
comment40.text=\r\n\ Return\ if\ the\ town\ is\ visible\r\n
comment41.params=
comment41.target=Location\ getLastLocation()
comment42.params=text
comment42.target=void\ raiseError(java.lang.String)
comment42.text=\r\n\ Usability\ requirement\ 4\:\ Raise\ an\ error\r\n\ @param\ text\ dispay\ in\ the\ error\ window\r\n
comment43.params=a
comment43.target=boolean\ isCollisioning(Location)
comment43.text=\r\n\ Checks\ if\ the\ given\ location\ is\ overlaping\ with\ another\ one\ \r\n\ @param\ a\ the\ another\ location\r\n
comment44.params=message\ object
comment44.target=void\ visibleAction(java.lang.String,\ java.lang.String)
comment44.text=\r\n\ records\ all\ all\ visible\ actions\ performed\ in\ the\ simulator\ \ \ \r\n\ @param\ message\ the\ last\ visible\ action\ that\ the\ simulator\ did\r\n\ @param\ object\ the\ type\ of\ element\ of\ that\ action\r\n
comment45.params=
comment45.target=void\ mst()
comment45.text=\ Make\ a\ minimum\ spanning\ tree\ to\ find\ the\ unnecesary\ streets\r\n\ mst\ uses\ a\ prim\ algoritms\ to\ make\ the\ minimun\ spanning\ tree\r\n
comment46.params=a
comment46.target=void\ print(java.lang.Object[])
comment46.text=\r\n\ Python\ print\ function\ implementation.\r\n\ @params\ Anything\r\n
comment47.params=
comment47.target=void\ test()
comment5.params=input
comment5.target=Town(java.lang.String[])
comment5.text=\r\n\ Constructor\ of\ a\ town\ given\ some\ specification\r\n\ 1st\ mini\ cicle\:\ Create\r\n\ @param\ the\ specification\ corresponds\ to\ the\ input\ of\ the\ icp\ problem\r\n
comment6.params=height\ width\ typeLocations\ typeStreets\ typeSigns
comment6.target=Town(int,\ int,\ java.lang.String[],\ java.lang.String[],\ java.lang.String[])
comment6.text=\r\n\ Constructor\ of\ a\ random\ town\ given\ some\ features\r\n\ 1st\ mini\ cicle\:\ Create\r\n\ @param\ height\ of\ the\ town\ in\ pixels\r\n\ @param\ width\ of\ the\ town\ in\ pixels\r\n\ @param\ typeLocations\ the\ types\ of\ the\ locations\ (must\ create\ those\ randomly)\r\n\ @param\ typeStreet\ the\ types\ of\ the\ streets\ (must\ create\ thouse\ randomly)\r\n\ @param\ typeSign\ the\ types\ of\ the\ signs\ (must\ create\ thouse\ randomly)\r\n\ @throws\ TownException\ INVALID_NUMBER_STREETS,\ \ if\ is\ imposible\ to\ create\ that\ number\ of\ streets\ with\ the\ given\ locations\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ INVALID_NUMBER_DEADENDS,\ if\ is\ imposible\ to\ create\ that\ number\ of\ signs\ with\ the\ given\ streets\ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ WRONG_LOCATION_TYPE,\ \ \ \ \ if\ the\ location's\ type\ is\ not\ valid\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ WRONG_STREET_TYPE,\ \ \ \ \ \ \ if\ the\ street's\ type\ is\ not\ valid\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ WRONG_SIGN_TYPE,\ \ \ \ \ \ \ \ \ if\ the\ sign's\ type\ is\ not\ valid\r\n
comment7.params=typeLocations\ typeStreets\ typeSigns\ colors
comment7.target=void\ randomElements(java.lang.String[],\ java.lang.String[],\ java.lang.String[],\ java.lang.String[])
comment7.text=\r\n\ Creates\ elements\ randomly\r\n\ @param\ typeLocations\ the\ types\ of\ the\ locations\ (must\ create\ those\ randomly)\r\n\ @param\ typeStreet\ the\ types\ of\ the\ streets\ (must\ create\ thouse\ randomly)\r\n\ @param\ typeSign\ the\ types\ of\ the\ signs\ (must\ create\ thouse\ randomly)\r\n\ @param\ colors\ the\ valid\ colors\r\n\ @throws\ TownException\ INVALID_NUMBER_STREETS,\ \ if\ is\ imposible\ to\ create\ that\ number\ of\ streets\ with\ the\ given\ locations\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ INVALID_NUMBER_DEADENDS,\ if\ is\ imposible\ to\ create\ that\ number\ of\ signs\ with\ the\ given\ streets\ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ WRONG_LOCATION_TYPE,\ \ \ \ \ if\ the\ location's\ type\ is\ not\ valid\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ WRONG_STREET_TYPE,\ \ \ \ \ \ \ if\ the\ street's\ type\ is\ not\ valid\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ WRONG_SIGN_TYPE,\ \ \ \ \ \ \ \ \ if\ the\ sign's\ type\ is\ not\ valid\r\n
comment8.params=typeLocations\ colors
comment8.target=java.util.ArrayList\ randomLocation(java.lang.String[],\ java.lang.String[])
comment8.text=\r\n\ Creates\ locations\ randomly\r\n\ @param\ typeLocations\ the\ types\ of\ the\ locations\r\n\ @param\ colors\ the\ valid\ colors\r\n\ @throws\ TownException\ WRONG_LOCATION_TYPE,if\ the\ location's\ type\ is\ not\ valid\r\n\ @return\ locationStreets\ the\ colors\ of\ the\ locations\ that\ can\ have\ streets\r\n
comment9.params=locationStreets\ typeStreets\ colors
comment9.target=java.util.ArrayList\ randomStreet(java.util.ArrayList,\ java.lang.String[],\ java.lang.String[])
comment9.text=\r\n\ Creates\ streets\ randomly\r\n\ @param\ locationStreets\ the\ colors\ of\ the\ locations\ that\ can\ have\ streets\r\n\ @param\ typeStreets\ the\ types\ of\ the\ streets\r\n\ @param\ colors\ the\ valid\ colors\r\n\ @throws\ TownException\ WRONG_STREET_TYPE,\ if\ the\ street's\ type\ is\ not\ valid\r\n\ @return\ streetSigns\ the\ color\ of\ the\ streets\ that\ can\ have\ signs\r\n
numComments=48
