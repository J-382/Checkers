#BlueJ class context
comment0.target=Town
comment0.text=\r\n\ Pretends\ to\ simulate\ a\ town\ who\ has\ decided\ to\ improve\ road\ sign\ placement,\ especially\ for\ dead\ ends.\r\n\ \r\n\ @author\ Angie\ Medina\ -\ Jose\ Perez\r\n\ @version\ 25/09/2020\r\n
comment1.params=height\ width\ slow
comment1.target=Town(int,\ int,\ boolean)
comment1.text=\r\n\ Constructor\ of\ the\ town\ given\ its\ length\ and\ width\r\n\ 1st\ mini\ cicle\:\ Create\r\n\ @param\ height\ of\ the\ town\ in\ pixels\r\n\ @param\ width\ of\ the\ town\ in\ pixels\r\n
comment10.params=locationA\ locationB
comment10.target=void\ delStreet(java.lang.String,\ java.lang.String)
comment10.text=\r\n\ Deletes\ a\ street\ with\ given\ information\r\n\ 3rd\ mini\ cicle\:\ add\ /\ delete\ street\r\n\ @param\ LocationA\ color\ of\ the\ linked\ location\r\n\ @param\ LocationB\ color\ of\ the\ linked\ location\r\n
comment11.params=
comment11.target=void\ delStreet()
comment11.text=\r\n\ Deletes\ a\ excess\ street\r\n\ 3rd\ mini\ cicle\:\ add\ /\ delete\ street\r\n
comment12.params=locationA\ locationB
comment12.target=void\ addSign(java.lang.String,\ java.lang.String)
comment12.text=\r\n\ Addicionate\ one\ sign\ given\ certain\ infomation\r\n\ 4th\ mini\ cicle\:\ add\ /\ delete\ sign\r\n\ @param\ locationA\ the\ color\ of\ one\ linked\ location\r\n\ @param\ locationB\ the\ color\ of\ one\ linked\ location\r\n
comment13.params=locationA\ locationB
comment13.target=void\ delSign(java.lang.String,\ java.lang.String)
comment13.text=\r\n\ Deletes\ a\ sign\ with\ given\ information\r\n\ 4th\ mini\ cicle\:\ add\ /\ delete\ sign\r\n\ @param\ LocationA\ color\ of\ the\ linked\ location\r\n\ @param\ LocationB\ color\ of\ the\ li\ nked\ location\r\n
comment14.params=
comment14.target=void\ delSign()
comment14.text=\r\n\ Deletes\ an\ excess\ sign\r\n\ 4th\ mini\ cicle\:\ add\ /\ delete\ sign\r\n
comment15.params=action\ ur
comment15.target=void\ undoRedoActions(java.lang.String[],\ java.lang.String)
comment15.text=\r\n\ Undo\ the\ visible\ actions\ made\ by\ the\ town\r\n\ 5th\ mini-cicle\ \:\ undo\ /\ redo\r\n\ @param\ action\ the\ list\ of\ visible\ actions\ made\ by\ the\ town\r\n\ @param\ ur\ a\ string\ idicating\ if\ it\ desire\ to\ redo\ or\ undo\r\n
comment16.params=
comment16.target=void\ undo()
comment16.text=\r\n\ Undo\ the\ last\ visual\ action\ performed\ in\ the\ simulator\r\n\ 5th\ mini-cicle\ \:\ undo\ /\ redo\r\n
comment17.params=
comment17.target=void\ redo()
comment17.text=\r\n\ Redo\ the\ last\ visual\ action\ performed\ in\ the\ simulator\r\n\ 5th\ mini-cicle\ \:\ undo\ /\ redo\r\n
comment18.params=
comment18.target=java.lang.String[][]\ roadMap()
comment18.text=\r\n\ Gives\ the\ information\ of\ the\ streets\r\n\ 6th\ mini-cicle\ \:\ consult\r\n\ @return\ the\ colors\ of\ the\ locations\ connected\ by\ a\ street\r\n
comment19.params=
comment19.target=boolean\ ok()
comment19.text=\r\n\ Gives\ the\ information\ of\ the\ last\ action\ excuted\ by\ the\ simulator\r\n\ 6th\ mini-cicle\ \:\ consult\r\n\ @return\ true\ if\ the\ last\ action\ was\ succesfully\ excuted\r\n\ false\ otherwise\r\n
comment2.params=height\ width
comment2.target=Town(int,\ int)
comment20.params=
comment20.target=java.lang.String[][]\ allLocations()
comment20.text=\r\n\ Gives\ the\ information\ of\ all\ the\ locations\ ordered\ alphabetically\ and\ in\ lower\ case\r\n\ 6th\ mini-cicle\ \:\ consult\r\n\ @return\ the\ colors\ and\ position\ of\ the\ locations\r\n
comment21.params=
comment21.target=java.lang.String[][]\ allStreets()
comment21.text=\r\n\ Gives\ the\ information\ of\ all\ the\ streets\ ordered\ alphabetically\ and\ in\ lower\ case\r\n\ 6th\ mini-cicle\ \:\ consult\r\n\ @return\ the\ colors\ of\ the\ locations\ connected\ by\ a\ street\r\n
comment22.params=
comment22.target=java.lang.String[][]\ allSigns()
comment22.text=\r\n\ Gives\ the\ information\ of\ all\ the\ signs\r\n\ 6th\ mini-cicle\ \:\ consult\r\n\ @return\ the\ colors\ of\ the\ locations\ connected\ by\ a\ street\ with\ a\ sign\r\n
comment23.params=
comment23.target=java.lang.String[][]\ unnecessaryStreets()
comment23.text=\r\n\ Returns\ a\ list\ with\ the\ streets\ that\ are\ not\ necessary\ to\ move\ around\ the\ town\ \r\n\ 6th\ mini-cicle\ \:\ consult\r\n\ @return\ A\ list\ of\ tuples\ with\ the\ locations\ that\ delimit\ the\ unnecessary\ streets\r\n
comment24.params=
comment24.target=void\ mst()
comment24.text=Make\ a\ minimum\ spanning\ tree\ to\ find\ the\ unnecesary\ streets
comment25.params=
comment25.target=java.lang.String[][]\ wrongSignals()
comment25.text=\r\n\ Gives\ the\ information\ of\ the\ wrong\ signals\ in\ the\ city\ ordered\ alphabetically\ and\ in\ lower\ case\r\n\ 6th\ mini-cicle\:\ Consult\r\n\ @return\ the\ colors\ of\ the\ locations\ connected\ to\ the\ signal's\ street\r\n
comment26.params=
comment26.target=void\ makeVisible()
comment26.text=\r\n\ Make\ visible\ the\ objects\ on\ the\ simulator\r\n\ 7th\ mini-cicle\ \:\ make\ visible\ /\ make\ invisible\r\n
comment27.params=
comment27.target=void\ makeInvisible()
comment27.text=\r\n\ Make\ invisible\ the\ objects\ on\ the\ simulator\r\n\ 7th\ mini-cicle\ \:\ make\ visible\ /\ make\ invisible\r\n
comment28.params=
comment28.target=void\ finish()
comment28.text=\r\n\ Exit\ the\ simutator\r\n\ 8th\ mini-cicle\ \:\ finish\r\n
comment29.params=text
comment29.target=void\ raiseError(java.lang.String)
comment29.text=\r\n\ Usability\ requirement\ 4\:\ Raise\ an\ error\r\n\ @param\ text\ dispay\ in\ the\ error\ window\r\n
comment3.params=height\ width\ numberLocations\ numberStreets\ numberDeadEnds\ slow
comment3.target=Town(int,\ int,\ int,\ int,\ int,\ boolean)
comment3.text=\r\n\ Constructor\ of\ a\ random\ town\ given\ some\ features\r\n\ 1st\ mini\ cicle\:\ Create\r\n\ @param\ height\ of\ the\ town\ in\ pixels\r\n\ @param\ width\ of\ the\ town\ in\ pixels\r\n\ @param\ number\ of\ locations\ (must\ create\ those\ randomly)\r\n\ @param\ number\ of\ street\ (must\ create\ thouse\ randomly)\r\n\ @param\ number\ of\ dead-ends\ (must\ create\ thouse\ randomly)\r\n
comment30.params=a
comment30.target=boolean\ isCollisioning(Location)
comment30.text=\r\n\ Checks\ if\ the\ given\ location\ is\ overlaping\ with\ another\ one\ \r\n
comment31.params=a
comment31.target=void\ print(java.lang.Object[])
comment31.text=\r\n\ Python\ print\ function\ implementation.\r\n\ @params\ Anything\r\n
comment32.params=
comment32.target=boolean\ isVisible()
comment32.text=\r\n\ Return\ if\ the\ town\ is\ visible\r\n
comment4.params=input\ slow
comment4.target=Town(java.lang.String[],\ boolean)
comment4.text=\r\n\ Constructor\ of\ a\ town\ given\ some\ specification\r\n\ 1st\ mini\ cicle\:\ Create\r\n\ @param\ the\ specification\ corresponds\ to\ the\ input\ of\ the\ icp\ problem\r\n
comment5.params=input
comment5.target=Town(java.lang.String[])
comment6.params=message\ object
comment6.target=void\ visibleAction(java.lang.String,\ java.lang.String)
comment7.params=color\ x\ y
comment7.target=void\ addLocation(java.lang.String,\ int,\ int)
comment7.text=\r\n\ Addicionate\ one\ location\ given\ certain\ information\r\n\ 2nd\ mini\ cicle\:\ add\ /\ delete\ location\r\n\ @param\ color\ is\ written\ in\ RGBa\ format\r\n\ @param\ x\ is\ the\ position\ on\ x\ axis\r\n\ @param\ y\ is\ the\ position\ on\ y\ axis\r\n
comment8.params=color
comment8.target=void\ delLocation(java.lang.String)
comment8.text=\r\n\ Deletes\ one\ location\ given\ certain\ its\ color\r\n\ 2nd\ mini\ cicle\:\ add\ /\ delete\ location\r\n\ @param\ color\ is\ written\ in\ RGBa\ format\r\n
comment9.params=locationA\ locationB
comment9.target=void\ addStreet(java.lang.String,\ java.lang.String)
comment9.text=\r\n\ Addicionate\ one\ street\ given\ certain\ infomation\r\n\ 3rd\ mini\ cicle\:\ add\ /\ delete\ street\r\n\ @param\ locationA\ the\ color\ of\ one\ linked\ location\r\n\ @param\ locationB\ the\ color\ of\ one\ linked\ location\r\n
numComments=33
